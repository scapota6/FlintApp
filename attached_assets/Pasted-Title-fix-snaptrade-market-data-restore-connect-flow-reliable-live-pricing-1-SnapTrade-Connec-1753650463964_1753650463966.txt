Title: fix(snaptrade+market-data): restore connect flow & reliable live pricing

1. SnapTrade Connect Flow  
   • Switch from `authentication.loginSnapTradeUser` to `connections.getConnectBrokerageURL` in `GET /api/snaptrade/connect-url`, per SnapTrade docs, to generate a valid, non‑expiring login link.  
   • Add `returnUrl` param set to `<FRONTEND_ORIGIN>/api/snaptrade/connection-portal` so SnapTrade can redirect back with fresh auth credentials.  
   • Create a new `POST /api/snaptrade/connection-portal` route to:  
     - Validate the returned `state` and token query parameters.  
     - Call `authentication.loginSnapTradeUser({ userId, userSecret })` (or register+login if needed).  
     - Send a `postMessage` to the opener window to signal success, then auto-close the popup.  
   • In the front end, listen for the popup’s `message` event and refresh the accounts grid automatically on success.

2. Persistent SnapTrade Credentials for Market Data  
   • At server startup or on first market-data request, load each user’s `snaptradeUserId` & `userSecret`; if missing, call `authentication.registerSnapTradeUser` + `authentication.loginSnapTradeUser` and save credentials.  
   • Implement a unified endpoint `GET /api/market-data?symbol=AAPL` that:  
     - Uses `snapTradeClient.referenceData.getQuotes({ symbol })` (or the correct SnapTrade quote endpoint) with the user’s credentials.  
     - Falls back to a secondary provider (e.g. IEX Cloud) only if SnapTrade returns “unsupported asset” or an error—not Alpha Vantage/Polygon to avoid rate limits.  
   • Cache each symbol’s result for 5 seconds in-memory or via Redis to prevent API throttling.

3. Front‑End Price Integration  
   • Update all React components (Dashboard sparkline, Watchlist cards, Trading page list, Stock detail) to fetch from `/api/market-data` instead of mock values.  
   • Remove any Alpha Vantage or Polygon client code paths.  
   • Display a spinner or “–” placeholder until live data arrives; on error show “Data unavailable”.

4. Order Placement & Price Accuracy  
   • Before submitting `placeOrder`, fetch the latest price via `/api/market-data` and include it in the payload.  
   • Generate a UUID v4 `tradeId` for each order.  
   • Handle `403` or `401` from SnapTrade by automatically refreshing credentials (re-register + re-login) and retrying once.

5. Testing & Verification  
   • Verify the SnapTrade popup now successfully closes and returns the user to Flint with connected accounts.  
   • Confirm watchlist and portfolio prices match the TradingView widget to the cent.  
   • Test order flow: buying shares at current live price places correctly without 403 errors.

Please implement these changes in one PR titled  
`fix(snaptrade+market-data): restore connect flow & reliable live pricing`  
and confirm end‑to‑end functionality matches yesterday’s working state.  
